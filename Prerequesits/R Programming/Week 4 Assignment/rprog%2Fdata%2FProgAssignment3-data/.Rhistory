with(ALDAta,ALDAta[,2][ ALDAta[,11] == min(ALDAta[,11])])
class(with(ALDAta,ALDAta[,2][ ALDAta[,11] == min(ALDAta[,11])]))
winner <- with(ALDAta,ALDAta[,2][ ALDAta[,11] == min(ALDAta[,11])])
length(winner)
test <- c("v","b","p")
type(test)
class(test)
sort(test)
sort(test)[1]
rm(list =ls())
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <- AL
state <- 'AL'
outcomeData[,11] <- as.numeric(outcomeData[,11])
outcomeDataSplitByState <- split(outcomeData,outcomeData$State)
outcomeofState <- outcomeDataSplitByState[state]
outcomeofState <- subset(outcomeofState, !is.na(outcomeofState[,11]))
str(outcomeofState)
outcomeofState <- subset(outcomeofState, !is.na(outcomeofState[,11]))
outcomeofState[,11]
View(outcomeofState)
outcomeofState <- outcomeofState[1]
outcomeofState[,11]
rm(list=ls())
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <- "AL"
class(outcomeData)
outcomeData[,11] <- as.numeric(outcomeData[,11])
outcomeDataSplitByState <- split(outcomeData,outcomeData$State)
str(outcomeDataSplitByState)
outcomeofState <- outcomeDataSplitByState[state]
class(outcomeofState)
class(outcomeofState[1])
class(outcomeofState[0])
class(outcomeofState[1])
str(outcomeofState)
View(outcomeofState)
View(outcomeofState)
rm(list = ls())
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <- "AL"
outcomeData[,11] <- as.numeric(outcomeData[,11])
class(outcomeData[,11])
outcomeDataSplitByState <- split(outcomeData,outcomeData[State])
outcomeDataSplitByState <- split(outcomeData,outcomeData[state])
outcomeDataSplitByState <- split(outcomeData,outcomeData[,state])
outcomeDataSplitByState <- split(outcomeData,outcomeData[,7])
outcomeofState <- outcomeDataSplitByState[state]
outcomeofState
str(outcomeofState)
str(outcomeofState)
str(outcomeofState[1])
str(outcomeofState[1])
str(outcomeofState$AL)
str(outcomeofState$AL)
str(outcomeofState$AL)
class(outcomeDataSplitByState$AL)
class(outcomeDataSplitByState[state])
class(outcomeDataSplitByState[[state]])
outcomeDataSplitByState <- split(outcomeData,outcomeData[,7])
utcomeofState <- outcomeDataSplitByState[[state]]
outcomeofState <- subset(outcomeofState, !is.na(outcomeofState[,11]))
class(outcomeofState)
outcomeofState <- outcomeDataSplitByState[[state]]
class(outcomeofState)
outcomeofState <- subset(outcomeofState, !is.na(outcomeofState[,11]))
winnerHospital <- with(outcomeofState,outcomeofState[,2][ outcomeofState[,11] == min(outcomeofState[,11])])
winnerHospital
#outcome-of-care-measuers.csv: contains information about 30-day mortality and readmisison rates for heat attacks, heart failure, and pneumonia for over 4,000 hostpital
#hospital-data.csv:Contains information about each hospital
#Hospital_Revised_Flatfiles.pdf: Descriptions of the variables in each file (i.e the code book), focus on page 19 number 11
best <- function(state, outcome){
##Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
allStates <- unique(outcomeData$State)
if(!outcome %in% c("heart attack", "heart failure", "pneumonia")){
stop("invalid outcome")
}
if (!state %in% allStates){
stop("invalid state")
}
if (outcome == 'heart attack'){
## turn the needed columsn to numeric values
outcomeData[,11] <- as.numeric(outcomeData[,11])
# outcomeData[,17] <- as.numeric(outcomeData[,17])
# outcomeData[,23] <- as.numeric(outcomeData[,23])
outcomeDataSplitByState <- split(outcomeData,outcomeData[,7])
outcomeofState <- outcomeDataSplitByState[[state]]
outcomeofState <- subset(outcomeofState, !is.na(outcomeofState[,11]))
winnerHospital <- with(outcomeofState,outcomeofState[,2][ outcomeofState[,11] == min(outcomeofState[,11])])
if(length(winnerHospital) > 1){
winnerHospital <- sort(winnerHospital)[1]
}
}
winnerHospital
## Return hospital name in that state with lowest 30-day death
## rate
# with(df,df[,1][ y == min(df[,2])])
}
# 11 Hearattack, 17 Heart Failure, 23 pnemeunia
# Oucomes “heart attack”, “heart failure”, or “pneumonia”
best("AL","heart attack")
#outcome-of-care-measuers.csv: contains information about 30-day mortality and readmisison rates for heat attacks, heart failure, and pneumonia for over 4,000 hostpital
#hospital-data.csv:Contains information about each hospital
#Hospital_Revised_Flatfiles.pdf: Descriptions of the variables in each file (i.e the code book), focus on page 19 number 11
best <- function(state, outcome){
##Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
allStates <- unique(outcomeData$State)
if(!outcome %in% c("heart attack", "heart failure", "pneumonia")){
stop("invalid outcome")
}
if (!state %in% allStates){
stop("invalid state")
}
if (outcome == "heart attack"){
colNumber <- 11
}
else if (outcome == "heart failure"){
colNumber <- 17
}
else if (outcome == "pneumonia"){
colNumber <- 23
}
heartAttackCode <- 11
HearFailureCode <- 17
pneumoniaCode <- 23
outcomeData[,colNumbner] <- as.numeric(outcomeData[,colNumbner])
outcomeDataSplitByState <- split(outcomeData,outcomeData[,7])
outcomeofState <- outcomeDataSplitByState[[state]]
outcomeofState <- subset(outcomeofState, !is.na(outcomeofState[,colNumbner]))
winnerHospital <- with(outcomeofState,outcomeofState[,2][ outcomeofState[,colNumbner] == min(outcomeofState[,colNumbner])])
if(length(winnerHospital) > 1){
winnerHospital <- sort(winnerHospital)[1]
}
## Return hospital name in that state with lowest 30-day death
## rate
# with(df,df[,1][ y == min(df[,2])])
}
# 11 Hearattack, 17 Heart Failure, 23 pnemeunia
# Oucomes “heart attack”, “heart failure”, or “pneumonia”
best("AL","heart attack")
#outcome-of-care-measuers.csv: contains information about 30-day mortality and readmisison rates for heat attacks, heart failure, and pneumonia for over 4,000 hostpital
#hospital-data.csv:Contains information about each hospital
#Hospital_Revised_Flatfiles.pdf: Descriptions of the variables in each file (i.e the code book), focus on page 19 number 11
best <- function(state, outcome){
##Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
allStates <- unique(outcomeData$State)
if(!outcome %in% c("heart attack", "heart failure", "pneumonia")){
stop("invalid outcome")
}
if (!state %in% allStates){
stop("invalid state")
}
if (outcome == "heart attack"){
colNumber <- 11
}
else if (outcome == "heart failure"){
colNumber <- 17
}
else if (outcome == "pneumonia"){
colNumber <- 23
}
heartAttackCode <- 11
HearFailureCode <- 17
pneumoniaCode <- 23
outcomeData[,colNumbner] <- as.numeric(outcomeData[,colNumbner])
outcomeDataSplitByState <- split(outcomeData,outcomeData[,7])
outcomeofState <- outcomeDataSplitByState[[state]]
outcomeofState <- subset(outcomeofState, !is.na(outcomeofState[,colNumbner]))
winnerHospital <- with(outcomeofState,outcomeofState[,2][ outcomeofState[,colNumbner] == min(outcomeofState[,colNumbner])])
if(length(winnerHospital) > 1){
winnerHospital <- sort(winnerHospital)[1]
}
## Return hospital name in that state with lowest 30-day death
## rate
# with(df,df[,1][ y == min(df[,2])])
}
# 11 Hearattack, 17 Heart Failure, 23 pnemeunia
# Oucomes “heart attack”, “heart failure”, or “pneumonia”
best("AL","heart attack")
#outcome-of-care-measuers.csv: contains information about 30-day mortality and readmisison rates for heat attacks, heart failure, and pneumonia for over 4,000 hostpital
#hospital-data.csv:Contains information about each hospital
#Hospital_Revised_Flatfiles.pdf: Descriptions of the variables in each file (i.e the code book), focus on page 19 number 11
best <- function(state, outcome){
##Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
allStates <- unique(outcomeData$State)
if(!outcome %in% c("heart attack", "heart failure", "pneumonia")){
stop("invalid outcome")
}
if (!state %in% allStates){
stop("invalid state")
}
if (outcome == "heart attack"){
colNumber <- 11
}
else if (outcome == "heart failure"){
colNumber <- 17
}
else if (outcome == "pneumonia"){
colNumber <- 23
}
heartAttackCode <- 11
HearFailureCode <- 17
pneumoniaCode <- 23
outcomeData[,colNumber] <- as.numeric(outcomeData[,colNumber])
outcomeDataSplitByState <- split(outcomeData,outcomeData[,7])
outcomeofState <- outcomeDataSplitByState[[state]]
outcomeofState <- subset(outcomeofState, !is.na(outcomeofState[,colNumber]))
winnerHospital <- with(outcomeofState,outcomeofState[,2][ outcomeofState[,colNumber] == min(outcomeofState[,colNumber])])
if(length(winnerHospital) > 1){
winnerHospital <- sort(winnerHospital)[1]
}
## Return hospital name in that state with lowest 30-day death
## rate
# with(df,df[,1][ y == min(df[,2])])
}
# 11 Hearattack, 17 Heart Failure, 23 pnemeunia
# Oucomes “heart attack”, “heart failure”, or “pneumonia”
best("AL","heart attack")
#outcome-of-care-measuers.csv: contains information about 30-day mortality and readmisison rates for heat attacks, heart failure, and pneumonia for over 4,000 hostpital
#hospital-data.csv:Contains information about each hospital
#Hospital_Revised_Flatfiles.pdf: Descriptions of the variables in each file (i.e the code book), focus on page 19 number 11
best <- function(state, outcome){
##Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
allStates <- unique(outcomeData$State)
if(!outcome %in% c("heart attack", "heart failure", "pneumonia")){
stop("invalid outcome")
}
if (!state %in% allStates){
stop("invalid state")
}
if (outcome == "heart attack"){
colNumber <- 11
}
else if (outcome == "heart failure"){
colNumber <- 17
}
else if (outcome == "pneumonia"){
colNumber <- 23
}
heartAttackCode <- 11
HearFailureCode <- 17
pneumoniaCode <- 23
outcomeData[,colNumber] <- as.numeric(outcomeData[,colNumber])
outcomeDataSplitByState <- split(outcomeData,outcomeData[,7])
outcomeofState <- outcomeDataSplitByState[[state]]
outcomeofState <- subset(outcomeofState, !is.na(outcomeofState[,colNumber]))
winnerHospital <- with(outcomeofState,outcomeofState[,2][ outcomeofState[,colNumber] == min(outcomeofState[,colNumber])])
if(length(winnerHospital) > 1){
winnerHospital <- sort(winnerHospital)[1]
}
winnerHospital
## Return hospital name in that state with lowest 30-day death
## rate
# with(df,df[,1][ y == min(df[,2])])
}
# 11 Hearattack, 17 Heart Failure, 23 pnemeunia
# Oucomes “heart attack”, “heart failure”, or “pneumonia”
best("AL","heart attack")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
rm(list=ls())
getwd()
source('best.R')
best("AL","heart attack")
best("BB", "heart attack")
#outcome-of-care-measuers.csv: contains information about 30-day mortality and readmisison rates for heat attacks, heart failure, and pneumonia for over 4,000 hostpital
#hospital-data.csv:Contains information about each hospital
#Hospital_Revised_Flatfiles.pdf: Descriptions of the variables in each file (i.e the code book), focus on page 19 number 11
best <- function(state, outcome){
##Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
allStates <- unique(outcomeData$State)
if(!outcome %in% c("heart attack", "heart failure", "pneumonia")){
stop("invalid outcome")
}
if (!state %in% allStates){
stop("invalid state")
}
if (outcome == "heart attack"){
colNumber <- 11
}
else if (outcome == "heart failure"){
colNumber <- 17
}
else if (outcome == "pneumonia"){
colNumber <- 23
}
heartAttackCode <- 11
HearFailureCode <- 17
pneumoniaCode <- 23
outcomeData[,colNumber] <- as.numeric(outcomeData[,colNumber])
outcomeDataSplitByState <- split(outcomeData,outcomeData[,7])
outcomeofState <- outcomeDataSplitByState[[state]]
outcomeofState <- subset(outcomeofState, !is.na(outcomeofState[,colNumber]))
winnerHospital <- with(outcomeofState,outcomeofState[,2][ outcomeofState[,colNumber] == min(outcomeofState[,colNumber])])
if(length(winnerHospital) > 1){
winnerHospital <- sort(winnerHospital)[1]
}
winnerHospital
## Return hospital name in that state with lowest 30-day death
## rate
# with(df,df[,1][ y == min(df[,2])])
}
# 11 Hearattack, 17 Heart Failure, 23 pnemeunia
# Oucomes “heart attack”, “heart failure”, or “pneumonia”
best("AL","heart attack")
best("TX", "heart failure")
rm(list= ls())
source('best.R')
best("TX", "heart failure")
#outcome-of-care-measuers.csv: contains information about 30-day mortality and readmisison rates for heat attacks, heart failure, and pneumonia for over 4,000 hostpital
#hospital-data.csv:Contains information about each hospital
#Hospital_Revised_Flatfiles.pdf: Descriptions of the variables in each file (i.e the code book), focus on page 19 number 11
best <- function(state, outcome){
##Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
allStates <- unique(outcomeData$State)
if(!outcome %in% c("heart attack", "heart failure", "pneumonia")){
stop("invalid outcome")
}
if (!state %in% allStates){
stop("invalid state")
}
if (outcome == "heart attack"){
colNumber <- 11
}
else if (outcome == "heart failure"){
colNumber <- 17
}
else if (outcome == "pneumonia"){
colNumber <- 23
}
heartAttackCode <- 11
HearFailureCode <- 17
pneumoniaCode <- 23
outcomeData[,colNumber] <- as.numeric(outcomeData[,colNumber])
outcomeDataSplitByState <- split(outcomeData,outcomeData[,7])
outcomeofState <- outcomeDataSplitByState[[state]]
outcomeofState <- subset(outcomeofState, !is.na(outcomeofState[,colNumber]))
winnerHospital <- with(outcomeofState,outcomeofState[,2][ outcomeofState[,colNumber] == min(outcomeofState[,colNumber])])
if(length(winnerHospital) > 1){
winnerHospital <- sort(winnerHospital)[1]
}
winnerHospital
## Return hospital name in that state with lowest 30-day death
## rate
# with(df,df[,1][ y == min(df[,2])])
}
# 11 Hearattack, 17 Heart Failure, 23 pnemeunia
# Oucomes “heart attack”, “heart failure”, or “pneumonia”
best("TX", "heart failure")
rm(list= ls())
source(best.R)
source("best.R")
best("TX", "heart failure")
rm(list= ls())
#outcome-of-care-measuers.csv: contains information about 30-day mortality and readmisison rates for heat attacks, heart failure, and pneumonia for over 4,000 hostpital
#hospital-data.csv:Contains information about each hospital
#Hospital_Revised_Flatfiles.pdf: Descriptions of the variables in each file (i.e the code book), focus on page 19 number 11
best <- function(state, outcome){
##Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
allStates <- unique(outcomeData$State)
if(!outcome %in% c("heart attack", "heart failure", "pneumonia")){
stop("invalid outcome")
}
if (!state %in% allStates){
stop("invalid state")
}
if (outcome == "heart attack"){
colNumber <- 11
}
else if (outcome == "heart failure"){
colNumber <- 17
}
else if (outcome == "pneumonia"){
colNumber <- 23
}
heartAttackCode <- 11
HearFailureCode <- 17
pneumoniaCode <- 23
outcomeData[,colNumber] <- as.numeric(outcomeData[,colNumber])
outcomeDataSplitByState <- split(outcomeData,outcomeData[,7])
outcomeofState <- outcomeDataSplitByState[[state]]
outcomeofState <- subset(outcomeofState, !is.na(outcomeofState[,colNumber]))
winnerHospital <- with(outcomeofState,outcomeofState[,2][ outcomeofState[,colNumber] == min(outcomeofState[,colNumber])])
if(length(winnerHospital) > 1){
winnerHospital <- sort(winnerHospital)[1]
}
winnerHospital
## Return hospital name in that state with lowest 30-day death
## rate
# with(df,df[,1][ y == min(df[,2])])
}
# 11 Hearattack, 17 Heart Failure, 23 pnemeunia
# Oucomes “heart attack”, “heart failure”, or “pneumonia”
rm(list= ls())
#outcome-of-care-measuers.csv: contains information about 30-day mortality and readmisison rates for heat attacks, heart failure, and pneumonia for over 4,000 hostpital
#hospital-data.csv:Contains information about each hospital
#Hospital_Revised_Flatfiles.pdf: Descriptions of the variables in each file (i.e the code book), focus on page 19 number 11
best <- function(state, outcome){
##Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
allStates <- unique(outcomeData$State)
if(!outcome %in% c("heart attack", "heart failure", "pneumonia")){
stop("invalid outcome")
}
if (!state %in% allStates){
stop("invalid state")
}
if (outcome == "heart attack"){
colNumber <- 11
}
else if (outcome == "heart failure"){
colNumber <- 17
}
else if (outcome == "pneumonia"){
colNumber <- 23
}
heartAttackCode <- 11
HearFailureCode <- 17
pneumoniaCode <- 23
outcomeData[,colNumber] <- as.numeric(outcomeData[,colNumber])
outcomeDataSplitByState <- split(outcomeData,outcomeData[,7])
outcomeofState <- outcomeDataSplitByState[[state]]
outcomeofState <- subset(outcomeofState, !is.na(outcomeofState[,colNumber]))
winnerHospital <- with(outcomeofState,outcomeofState[,2][ outcomeofState[,colNumber] == min(outcomeofState[,colNumber])])
if(length(winnerHospital) > 1){
winnerHospital <- sort(winnerHospital)[1]
}
winnerHospital
## Return hospital name in that state with lowest 30-day death
## rate
# with(df,df[,1][ y == min(df[,2])])
}
# 11 Hearattack, 17 Heart Failure, 23 pnemeunia
# Oucomes “heart attack”, “heart failure”, or “pneumonia”
best("TX", "heart failure")
rm(list= ls())
source('best.R')
best("TX", "heart failure")
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeDate[,State]
outcomeDate[,7]
outcomeData[,7]
rm(list= ls())
source('best.R')
best("TX", "heart failure")
rm(list= ls())
#outcome-of-care-measuers.csv: contains information about 30-day mortality and readmisison rates for heat attacks, heart failure, and pneumonia for over 4,000 hostpital
#hospital-data.csv:Contains information about each hospital
#Hospital_Revised_Flatfiles.pdf: Descriptions of the variables in each file (i.e the code book), focus on page 19 number 11
best <- function(state, outcome){
##Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
allStates <- unique(outcomeData[,7])
if(!outcome %in% c("heart attack", "heart failure", "pneumonia")){
stop("invalid outcome")
}
if (!state %in% allStates){
stop("invalid state")
}
if (outcome == "heart attack"){
colNumber <- 11
}
else if (outcome == "heart failure"){
colNumber <- 17
}
else if (outcome == "pneumonia"){
colNumber <- 23
}
heartAttackCode <- 11
HearFailureCode <- 17
pneumoniaCode <- 23
outcomeData[,colNumber] <- as.numeric(outcomeData[,colNumber])
outcomeDataSplitByState <- split(outcomeData,outcomeData[,7])
outcomeofState <- outcomeDataSplitByState[[state]]
outcomeofState <- subset(outcomeofState, !is.na(outcomeofState[,colNumber]))
winnerHospital <- with(outcomeofState,outcomeofState[,2][ outcomeofState[,colNumber] == min(outcomeofState[,colNumber])])
if(length(winnerHospital) > 1){
winnerHospital <- sort(winnerHospital)[1]
}
winnerHospital
## Return hospital name in that state with lowest 30-day death
## rate
# with(df,df[,1][ y == min(df[,2])])
}
# 11 Hearattack, 17 Heart Failure, 23 pnemeunia
# Oucomes “heart attack”, “heart failure”, or “pneumonia”
best("TX", "heart failure")
rm(list=ls())
source('best.R')
best("TX", "heart failure")
